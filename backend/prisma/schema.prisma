generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                  @id @default(autoincrement())
  email              String               @unique
  password           String
  firstName          String?
  lastName           String?
  phone              String?
  dateOfBirth        DateTime?
  role               Role                 @default(USER)
  isEmailVerified    Boolean              @default(false)
  isPhoneVerified    Boolean              @default(false)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  refreshToken       RefreshToken[]
  emailVerification EmailVerification[]
  phoneVerification PhoneVerification[]
  verifications      Verification[]
  credits            Int                   @default(10)
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model EmailVerification {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model PhoneVerification {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  otp       String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Verification {
  id              Int      @id @default(autoincrement())
  userId          Int
  user            User     @relation(fields: [userId], references: [id])
  status          String
  additionalDetails Json?
  digilockerData Json?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  purpose         String
  aadharFrontUrl  String?
  aadharBackUrl   String?
  criminalRecords Json?
  policeReport    Json?
  location        String?
}

enum Role {
  USER
  ADMIN
}